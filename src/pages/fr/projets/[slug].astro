---
import { getCollection, type CollectionEntry } from 'astro:content';
import CollectionLayout from '@/layouts/CollectionLayout.astro';
import { projectsData } from '../data/projects.astro';

type AboutEntry = CollectionEntry<'projets'>;

export async function getStaticPaths() {
  const entries = await getCollection('projets');
  return entries
    .filter((entry) => entry.data.lang === 'fr')
    .map((entry) => ({ params: { slug: entry.data.slug } }));
}

const { slug } = Astro.params;
const entries: AboutEntry[] = await getCollection('projets');
const currentLang = 'fr';
const localizedEntries = entries.filter((entry) => entry.data.lang === currentLang);
const currentEntry = localizedEntries.find((entry) => entry.data.slug === slug);

if (!currentEntry) throw new Error(`No data found for the slug: ${slug}`);
const { Content } = await currentEntry.render();

const { title, description, alternates } = projectsData
---

<CollectionLayout lang={currentLang} title={title} description={description} alternates={alternates}>
  <div slot="sidebar" class="sidebar-entries">
    {localizedEntries.map((entry) => (
      <a
      href={`/fr/projets/${entry.data.slug}`}
      class={entry.data.slug === slug ? 'active' : ''}
      >
        {entry.data.title}
      </a>
    ))}
  </div>
  
  <h1 slot="markdown-title"  class="markdown-title">{currentEntry.data.title}</h1>
  <Content slot="markdown-body" entry={currentEntry} />

</CollectionLayout>

