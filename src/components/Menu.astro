---
import type { DisplayDataType } from "@/types/page";
import type { Lang } from "@/types/base";

// About
import { about as aboutEn } from "@/pages/en/data/about.astro";
import { about as aboutFr } from "@/pages/fr/data/about.astro";

// Projects
import { projects as projectsEn } from "@/pages/en/data/projects.astro";
import { projects as projectsFr } from "@/pages/fr/data/projects.astro";

// Contact
import { contact as contactEn } from "@/pages/en/data/contact.astro";
import { contact as contactFr } from "@/pages/fr/data/contact.astro";

// Settings
import { settings as settingsEn } from "@/pages/en/data/settings.astro";
import { settings as settingsFr } from "@/pages/fr/data/settings.astro";

const { lang = "en" } = Astro.props;

type RouteID = "about" | "projects" | "contact" | "settings";

const ids: RouteID[] = ["about", "projects", "contact", "settings"];

type RouteData = Record<RouteID, DisplayDataType>;

const routeData: RouteData = {
  about: lang === "fr" ? aboutFr : aboutEn,
  projects: lang === "fr" ? projectsFr : projectsEn,
  contact: lang === "fr" ? contactFr : contactEn,
  settings: lang === "fr" ? settingsFr : settingsEn,
};

const routes = ids.map((id) => {
  const { title: label, alternates } = routeData[id].data;
  const url = alternates[lang as Lang]
  
  return { id, label, url }
});
---

<div class="menu">
  {routes.map(({ id, label, url }) => (
    <a id={id} href={url} class={`menu-button ${id === 'settings' ? 'settings' : ''}`}>
      <div class="circle" />
      <span class="menu-label">{label}</span>
    </a>
  ))}
</div>
